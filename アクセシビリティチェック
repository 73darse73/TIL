## 準備

---

1. 基準を決める
- a. WCAGのVerを決める
- 2.0/2.1/2.2がある（3.0は現在開発中）
    - 個人的に2.2か2.1がいいかも
    - もちろん2.2がいいけど1部英語表記のみ
    - 2.2の内容はまだ「JIS X 8341-3:2016」に反映されてないかも
- b. 達成基準を決める
- A/AA/AAA
    - 最初はAだけでいい（Aだけでも大変）
    - 公的機関に求められるレベルはAA
    - AAAは現実的ではない
1. チェック記録シートの作成
- a. 自分で作る
- [行がページ名](https://pencil-jp.app.box.com/file/1715179081983)
- [達成基準単位](https://docs.google.com/spreadsheets/u/1/d/1htJAZQ4ylX0jMY2SHjTEdSIQFEW-SsVqmjaJ1uB3KZ0/htmlview#)
- b.ツールで作成
- COB-CHA
    - 結構使いやすい
    - おすすめ
    - スプレッドシートに拡張機能をインストールするため念の為セキュリティ確認必要かも
1. 自動チェッカーを掛ける（明らかにNGを割り出す）
    1. axe DevTools
        - 拡張機能
        - コントラスト、代替テキスト、AccessibleAccessible Name、見出しラベル、lang属性、ランドマーク、フォームラベル等
    2. Markuplint（SS向け）
        - vscodeの拡張機能
2. 部分的なところから確認対象画面に以下が出現するかを確認、無いなら「該当なし」にする
    1. 動画/音声・フォームの存在確認
        - 動画/音声が無いなら「該当なし」
            - 1.2.1 音声のみ及び映像のみ
            - 1.2.2 キャプション
            - 1.2.3音声解説、又はメディアに対する代替
            - 1.2.4 キャプション (ライブ)
            - 1.2.5 音声解説 (収録済)
            - 1.4.2 音声の制御
        - フォームが無いなら「該当なし」
            - 1.3.5 入力目的の特定
            - 3.2.2 入力時
            - 3.3.1 エラーの特定
            - 3.3.2 ラベル又は説明
            - 3.3.3 エラー修正の提案
            - 3.3.4 誤り防止 (法的、金融、データ)
            - 3.3.7 冗長な入力項目
            - 3.3.8 アクセシブルな認証 (最低限)
    2. あんまりやらない系の存在確認
        - 作っていないなら「該当なし」
            - 1.3.4 表示の向き
            - 2.1.4 文字キーのショートカット
            - 2.5.4 動きによる起動
            - 2.5.7 ドラッグ動作
            - 2.5.1 ポインタのジェスチャ
            - 2.5.2 ポインタのキャンセル
            - 2.3.1 3回の閃光
    3. 部分的に出現するものをチェック下記の存在に目星をつけ、手動で操作して確認。そこ以外は「該当なし」にする
        - ホバーで追加表示する箇所(例:ナビゲーションやツールチップ)
            - 1.4.13 ホバー又はフォーカスで表示されるコンテンツ
        - 画面内の他の要素にかぶさる箇所(例:固定ヘッダやメニュー)
            - 2.4.11 隠されないフォーカス
        - 意図的にフォーカストラップする箇所(例:ダイアログ)
            - 2.1.2 キーボードトラップなし
        - 自動で切り替わるものがある箇所(例:カルーセルなど)
            - 2.2.1 タイミング調整可能 および 2.2.2 一時停止、停止、非表示
        - 画面を書き換えずに通知する箇所(例:アクション結果、待機状態、進捗、エラー)
            - 4.1.3 ステータスメッセージ
    4. 共通部分＆横断部分をチェック
        - 共通コンポーネント部分(ナビゲーション、ヘッダ、フッタなど)をチェック
        - 同時に、複数画面に関わる基準をチェック
            - 2.4.5 複数の手段
            - 3.2.3 一貫したナビゲーション
            - 3.2.4 一貫した識別
            - 3.2.6 一貫したヘルプ
        - 以下もテンプレートをチェック
            - 1.4.4 テキストのサイズ変更: ズーム禁止meta要素の有無
            - 3.1.1 ページの言語: html要素のlang属性の確認
3. 達成基準単位で見るページ単位で達成基準を順番に確認していくのは効率が悪い
    1. 複数の達成基準を一緒に見る
        - 1.4.5 文字画像+1.1.1 非テキストコンテンツ
            - そもそも画像か?を確認 → 画像なら代替テキストの確認
        - 1.4.1 色の使用+1.3.3 感覚的な特徴
            - グレースケールで確認 → 色名・形・大きさ・位置の指示を同時に確認
        - 2.1.1 キーボード+2.4.3 フォーカス順序+2.4.7 フォーカスの可視化 +3.2.1 フォーカス時
            - キーボードでフォーカス移動させながらまとめて確認
        - 2.4.1 ブロックスキップ+2.4.6 見出し及びラベル+1.3.1 情報及び関係性
            - ランドマークと見出しレベルをツールでまとめて確認
    2. ツールで手動チェックの補助
        - Accessibility Visualizer
            - 「画像」にチェックを入れて確認する
                
                ○ 1.1.1 非テキストコンテンツ、1.4.5 文字画像
                
                ● 見出しとセクションをハイライト表示して確認する
                
                ○ 1.3.1 情報及び関係性、2.4.1 ブロックスキップ、2.4.6 見出し及びラベル
                
                ● ターゲットのサイズが小さすぎる場合に警告が出る ○ 2.5.8 ターゲットのサイズ (最低限)
                
                ● 「ライブリージョンをアナウンス」でステータスメッセージの存在を確認する ○ 4.1.3 ステータスメッセージ
                
                - 
                - Web Developer
                    - CSSを剥がして順序を確認する(CSS > Disable All Styles)
                        - 1.3.2 意味のあるシーケンス
- 
- 画面にaltを出して確認する(Images > Display Alt Attributes)
    - 1.1.1 非テキストコンテンツ
    - 1.4.5 文字画像
    - "Replace Images With Alt Attributes"もおすすめ
- 
- 見出しリストで確認する(Information > View Document Outline)
    - 1.3.1 情報及び関係性
    - 2.4.6 見出し及びラベル
    - 
    - Accessibility Insights
        - フォーカス順を表示する(Tab stops)
            - 2.1.1 キーボード
            - 2.4.3 フォーカス順序
            - 
            - Accessible Nameを表示して確認する(altだけでなくaria-labelも見える)
                - 1.1.1 非テキストコンテンツ
                - 1.4.5 文字画像
            - LandmarksとHeadingsをハイライト表示して確認する
                - 2.4.1 ブロックスキップ
                - 2.4.6 見出し及びラベル
                - 1.3.1 情報及び関係性
            - https://webaim.org/resources/contrastchecker/で自動でコントラストチェックできない箇所を手動確認
                - 1.4.3 コントラスト(最低限)、1.4.11 非テキストのコントラスト
            - Responsive Viewerで表示確認
                - 1.4.10 リフロー
                - 1.4.4 テキストのサイズ変更
- 
- ユーザーCSSを適用したチェックの実施方法
    - 1.4.12 テキストの間隔
1. マークアップ系の手動確認
    1. 比較的ライトなもの(画一的な確認ができるもの)を片付ける
        - 2.4.4 リンクの目的(コンテキスト内)
        - 2.5.3 名前(name)のラベル
        - 3.1.2 一部分の言語
    2. ラスボス
        - 1.3.1 情報及び関係性
        - 4.1.2 名前 (name) ・役割 (role) 及び値 (value)
        - 操作して状態を切り替えつつFull Accessiblility TreeとDOMを見る
        - 操作して状態を切り替えつつiOS VoiceOver、NVDAで上から下まで通しで見る
-

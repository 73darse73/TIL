## 一般的な達成方法

### [G140: 異なる提示を可能にするために、情報と構造を表現から分離する](https://waic.jp/translations/WCAG21/Techniques/general/G140)

- 概要
    - ウェブサイトのコンテンツを作るとき、「見た目」と「内容の構造」を分けて考えることが大事だという話。
        - **見た目**（表現的エンコーディング）
            - フォントや色、大きさ、配置など、ウェブページをどのように見せるかに関すること。
        - **構造**（構造的エンコーディング）
            - ページの中で見出しや段落、リスト、テーブルなど、どの部分が何を意味しているかという内容に関すること。
- チェックポイント
    - 適切な要素でマークアップされているかどうか。
        - 見た目のためだけに要素が選ばれていないかも含め
            - bタグなど
    - HTMLにインラインやstyleタグでスタイルが指定されていないか。
    - JSで動的にstyleを変更していないか。
        - jsでclass付与を行い、cssでそのclassにスタイルを当てておけば問題なし。

### [F87: **達成基準 1.3.1 の失敗例 － CSS の :before 及び :after 疑似要素並びに 'content' プロパティを用いて、非装飾のコンテンツを挿入している**](https://waic.jp/translations/WCAG-TECHS/F87.html)

- 概要
    - contentプロパティに意味のある文字を入れないで。
    - CSSをoffにしている人が見れないかもしれない。
- チェックポイント
    - before,afterのcontentに意味のある文字が入っていないか確認する。

### [**H97: nav 要素を使用して、関連したリンクをグループ化する**](https://waic.jp/translations/WCAG-TECHS/H97.html)

- 概要
    - ナビゲーションリンクをnav要素を使ってグループ化する。
    - nav要素が同一ページで複数ある場合は、aria-labelやaria-labelledbyを使用して区別する。
    - 全てのリンクをnavで囲う必要はない
- チェックポイント
    - 過剰にnavで囲んでいないか。
    - 複数navがある場合は、aria-labelやaria-labelledbyを使用して区別しているか。
